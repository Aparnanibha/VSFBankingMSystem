// <auto-generated />
using System;
using BankingManagementSystem.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BankingManagementSystem.Migrations
{
    [DbContext(typeof(BankingManagementContext))]
    partial class BankingManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AspNetUserRole", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex(new[] { "RoleId" }, "IX_AspNetUserRoles_RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("BankingManagementSystem.Models.AddPayee", b =>
                {
                    b.Property<decimal?>("AccountNumber")
                        .HasColumnType("numeric(12,0)");

                    b.Property<decimal?>("BeneficiaryAccountNumber")
                        .HasColumnType("numeric(12,0)");

                    b.Property<string>("BeneficiaryName")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("NickName")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.HasIndex("AccountNumber");

                    b.ToTable("AddPayee", (string)null);
                });

            modelBuilder.Entity("BankingManagementSystem.Models.AddPayee1", b =>
                {
                    b.Property<decimal>("AccountNumber")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BeneficiaryAccountNumber")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BeneficiaryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NickName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AccountNumber", "BeneficiaryAccountNumber");

                    b.ToTable("AddPayees", (string)null);
                });

            modelBuilder.Entity("BankingManagementSystem.Models.AspNetRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "NormalizedName" }, "RoleNameIndex")
                        .IsUnique()
                        .HasFilter("([NormalizedName] IS NOT NULL)");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("BankingManagementSystem.Models.AspNetRoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "RoleId" }, "IX_AspNetRoleClaims_RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("BankingManagementSystem.Models.AspNetUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "NormalizedEmail" }, "EmailIndex");

                    b.HasIndex(new[] { "NormalizedUserName" }, "UserNameIndex")
                        .IsUnique()
                        .HasFilter("([NormalizedUserName] IS NOT NULL)");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("BankingManagementSystem.Models.AspNetUserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserId" }, "IX_AspNetUserClaims_UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("BankingManagementSystem.Models.AspNetUserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex(new[] { "UserId" }, "IX_AspNetUserLogins_UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("BankingManagementSystem.Models.AspNetUserToken", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("BankingManagementSystem.Models.Customer", b =>
                {
                    b.Property<string>("CustomerId")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<decimal?>("AadharNumber")
                        .HasColumnType("numeric(16,0)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("EmailId")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("EnableNetBanking")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("FathersName")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<decimal?>("GrossAnnualIncome")
                        .HasColumnType("numeric(12,2)");

                    b.Property<string>("IsDebitCardRequired")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("isDebitCardRequired");

                    b.Property<string>("LastName")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<decimal?>("MobileNumber")
                        .HasColumnType("numeric(10,0)");

                    b.Property<string>("OccupationType")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("PermanentAddress")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("ResidentialAddress")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("SourceOfIncome")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("BankingManagementSystem.Models.CustomerAcc", b =>
                {
                    b.Property<decimal>("AccountNumber")
                        .HasColumnType("numeric(12,0)");

                    b.Property<string>("CustomerId")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<string>("Status")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<double>("TotalBalance")
                        .HasColumnType("float");

                    b.HasKey("AccountNumber")
                        .HasName("PK__Customer__BE2ACD6EC7DC61E5");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerAcc", (string)null);
                });

            modelBuilder.Entity("BankingManagementSystem.Models.LoginVM", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("LoginVM");
                });

            modelBuilder.Entity("BankingManagementSystem.Models.RegisterNetBanking", b =>
                {
                    b.Property<decimal>("AccountNumber")
                        .HasColumnType("numeric(12,0)");

                    b.Property<decimal>("CustomerId")
                        .HasColumnType("numeric(12,0)");

                    b.Property<string>("Passwordd")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("TransactionPassword")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.HasKey("AccountNumber", "CustomerId")
                        .HasName("PK__Register__24602B23768E2252");

                    b.ToTable("RegisterNetBanking", (string)null);
                });

            modelBuilder.Entity("BankingManagementSystem.Models.Registration", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("password");

                    b.Property<string>("TransactionPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("registrations", (string)null);
                });

            modelBuilder.Entity("BankingManagementSystem.Models.TransactionDetail", b =>
                {
                    b.Property<string>("TransactionId")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<decimal?>("AccountNumber")
                        .HasColumnType("numeric(12,0)");

                    b.Property<string>("Maturityinstruct")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<decimal?>("ToAccountNumber")
                        .HasColumnType("numeric(12,0)");

                    b.Property<DateTime?>("TransactionDate")
                        .HasColumnType("date");

                    b.Property<string>("TransactionType")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.HasKey("TransactionId")
                        .HasName("PK__Transact__55433A6B6EBAA246");

                    b.HasIndex("AccountNumber");

                    b.ToTable("TransactionDetail", (string)null);
                });

            modelBuilder.Entity("AspNetUserRole", b =>
                {
                    b.HasOne("BankingManagementSystem.Models.AspNetRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BankingManagementSystem.Models.AspNetUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BankingManagementSystem.Models.AddPayee", b =>
                {
                    b.HasOne("BankingManagementSystem.Models.CustomerAcc", "AccountNumberNavigation")
                        .WithMany()
                        .HasForeignKey("AccountNumber")
                        .HasConstraintName("fk_AccNum_AddPay");

                    b.Navigation("AccountNumberNavigation");
                });

            modelBuilder.Entity("BankingManagementSystem.Models.AspNetRoleClaim", b =>
                {
                    b.HasOne("BankingManagementSystem.Models.AspNetRole", "Role")
                        .WithMany("AspNetRoleClaims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("BankingManagementSystem.Models.AspNetUserClaim", b =>
                {
                    b.HasOne("BankingManagementSystem.Models.AspNetUser", "User")
                        .WithMany("AspNetUserClaims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BankingManagementSystem.Models.AspNetUserLogin", b =>
                {
                    b.HasOne("BankingManagementSystem.Models.AspNetUser", "User")
                        .WithMany("AspNetUserLogins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BankingManagementSystem.Models.AspNetUserToken", b =>
                {
                    b.HasOne("BankingManagementSystem.Models.AspNetUser", "User")
                        .WithMany("AspNetUserTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BankingManagementSystem.Models.CustomerAcc", b =>
                {
                    b.HasOne("BankingManagementSystem.Models.Customer", "Customer")
                        .WithMany("CustomerAccs")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("fk_cust_ID");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("BankingManagementSystem.Models.RegisterNetBanking", b =>
                {
                    b.HasOne("BankingManagementSystem.Models.CustomerAcc", "AccountNumberNavigation")
                        .WithMany("RegisterNetBankings")
                        .HasForeignKey("AccountNumber")
                        .IsRequired()
                        .HasConstraintName("fk_AccNum");

                    b.Navigation("AccountNumberNavigation");
                });

            modelBuilder.Entity("BankingManagementSystem.Models.TransactionDetail", b =>
                {
                    b.HasOne("BankingManagementSystem.Models.CustomerAcc", "AccountNumberNavigation")
                        .WithMany("TransactionDetails")
                        .HasForeignKey("AccountNumber")
                        .HasConstraintName("fk_AccNum_Tr");

                    b.Navigation("AccountNumberNavigation");
                });

            modelBuilder.Entity("BankingManagementSystem.Models.AspNetRole", b =>
                {
                    b.Navigation("AspNetRoleClaims");
                });

            modelBuilder.Entity("BankingManagementSystem.Models.AspNetUser", b =>
                {
                    b.Navigation("AspNetUserClaims");

                    b.Navigation("AspNetUserLogins");

                    b.Navigation("AspNetUserTokens");
                });

            modelBuilder.Entity("BankingManagementSystem.Models.Customer", b =>
                {
                    b.Navigation("CustomerAccs");
                });

            modelBuilder.Entity("BankingManagementSystem.Models.CustomerAcc", b =>
                {
                    b.Navigation("RegisterNetBankings");

                    b.Navigation("TransactionDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
